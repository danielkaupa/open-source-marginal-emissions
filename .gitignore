################################################################################
# CORE PYTHON ARTIFACTS
# Bytecode, caches, compiled extensions. These are generated per-environment
# and should never be committed—they change frequently and bloat diffs.
################################################################################
__pycache__/
**/*.pyc
*.py[cod]
*$py.class

# Compiled C/C++/Cython extensions (platform-specific)
*.so
# Optional (Windows/macOS equivalents):
*.pyd
*.dll
*.dylib

################################################################################
# BUILD / PACKAGING OUTPUT
# Artifacts produced by build systems and packaging tools. Recreate via `build`.
################################################################################
.Python
build/
dist/
downloads/
eggs/
.eggs/
sdist/
wheels/
share/python-wheels/
parts/
var/
lib/
lib64/
*.egg-info/
*.egg
MANIFEST
.installed.cfg
.wheel/

################################################################################
# TEMPORARY / SCRATCH FILES
# Ephemeral working files—safe to regenerate or discard.
################################################################################
*.tmp
*.temp

################################################################################
# INSTALLERS, LOGS & LOCKFILES (POLICY NOTES BELOW)
# Logs & transient installer outputs shouldn't be versioned.
################################################################################
pip-log.txt
pip-delete-this-directory.txt
*.log

# Dependency lockfiles: keeping them ensures reproducible installs,
# but some LIBRARIES prefer omitting cross-platform locks.
# Enable based on project type:
# --- pipenv ---
# Pipfile.lock
# --- uv ---
# uv.lock
# --- poetry ---
# poetry.lock
# poetry.toml
# --- pdm ---
# pdm.lock
# pdm.toml
.pdm-python
.pdm-build/
# --- pixi ---
# pixi.lock
.pixi

################################################################################
# TESTING / COVERAGE
# Test runners and coverage tools produce caches and reports on the fly.
################################################################################
.tox/
.nox/
.pytest_cache/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py.cover
cover/
.hypothesis/

################################################################################
# TYPE CHECKERS / LINTERS / DEBUG
################################################################################
.mypy_cache/
.dmypy.json
dmypy.json
.pyre/
.pytype/
.ruff_cache/
cython_debug/

################################################################################
# DOCS
# Built documentation is derived content; keep sources, ignore builds.
################################################################################
docs/_build/
# mkdocs
/site

################################################################################
# FRAMEWORK-SPECIFIC
################################################################################
# Django
local_settings.py         # Machine-local overrides (often secret)
db.sqlite3                # Dev DB
db.sqlite3-journal
# Flask
instance/
.webassets-cache
# Scrapy
.scrapy
# Celery
celerybeat-schedule
celerybeat.pid
# Sphinx
# (already covered under DOCS)
# PyBuilder
.pybuilder/
target/
# SageMath
*.sage.py

################################################################################
# JUPYTER / IPYTHON
# Notebook checkpoints and local profiles.
################################################################################
.ipynb_checkpoints
profile_default/
ipython_config.py

################################################################################
# RUNTIME ENVIRONMENTS
# Virtualenvs/conda/pixi—environment-local, large, and platform-specific.
################################################################################
.venv
venv/
env/
ENV/
env.bak/
venv.bak/
__pypackages__/           # PEP 582
# direnv
.envrc
# pyenv: often kept OUT for libraries, but OK to commit in apps/monorepos
# .python-version

################################################################################
# SECRETS & ENV CONFIG
# Prevent credential leaks. Keep a sample (e.g., `.env.example`) in repo.
################################################################################
.env
# Common patterns (uncomment as needed):
# .env.*           # e.g., .env.local, .env.development
# *.env
# *.secret
# *.secrets
# *.key
# *.pem
# * credentials files for cloud CLIs often live elsewhere; consider a global ignore

################################################################################
# OS / EDITOR NOISE
# Machine- or editor-specific state that doesn’t belong in source control.
################################################################################
# macOS / Windows
.DS_Store
Thumbs.db

# JetBrains (see official global ignore for finer control)
# .idea/

# VS Code (prefer a project-level curated .vscode/ if you share tasks/settings)
# .vscode/

# Spyder / Rope / PyCharm / Cursor
.spyderproject
.spyproject
.ropeproject
# Cursor editor AI context filters (not needed in repo)
.cursorignore
.cursorindexingignore

################################################################################
# TOOL-SPECIFIC
################################################################################
# Abstra (AI automation framework): user credentials & local state
.abstra/

# PyPI config (contains tokens if you log in locally)
.pypirc

# Sphinx/Marimo/Interactive tools
marimo/_static/
marimo/_lsp/
__marimo__/

################################################################################
# DATA / ARTIFACTS / RESULTS
# Large or derived files. Keep sources small & version text; use DVC/LFS for big.
################################################################################
data/
# Common optional patterns (uncomment as needed):
# datasets/
# models/
# checkpoints/
# outputs/
# results/
# reports/
# figures/
# *.parquet
# *.feather
# *.arrow
# *.h5
# *.hdf5
# *.csv          # If generated—keep if authoritative source lives here
# *.tsv
# *.npz
# *.npy
# *.joblib
# *.pkl

################################################################################
# DOCUMENTATION OF DEP TOOL POLICIES (REFERENCE ONLY)
# Lockfiles (poetry/pdm/pipenv/uv/pixi) improve reproducibility for APPS.
# For LIBRARIES, many teams omit lockfiles to avoid over-constraining users.
# Decide per-repo; uncomment your chosen lockfile above and keep it consistent.
################################################################################